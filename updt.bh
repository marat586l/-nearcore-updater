#!/bin/bash

function update    {

 echo "Update started at `date +"%Y-%m-%d--%H:%M"`"
 echo "Update started at `date +"%Y-%m-%d--%H:%M"`" >> $HOMEFOLDER/update.log
 rm -rf $HOMEFOLDER/nearcore.new
  
 git clone --branch $GH_version https://github.com/nearprotocol/nearcore.git $HOMEFOLDER/nearcore.new
 
 #git clone  https://github.com/nearprotocol/nearcore.git $HOMEFOLDER/nearcore.new
 #git checkout tags/$GH_version
 #git switch -c $GH_version

 cd $HOMEFOLDER/nearcore.new
 make release >> $HOMEFOLDER/update.log
 
 if [ $? -eq 0 ]       #Successful update
 then
  rm -rf $HOMEFOLDER/nearcore.bak
  mv $HOMEFOLDER/nearcore $HOMEFOLDER/nearcore.bak
  mv  $HOMEFOLDER/nearcore.new $HOMEFOLDER/nearcore
 
  cd $HOMEFOLDER
  echo "Successful update  `date +"%Y-%m-%d--%H:%M"`" >> $HOMEFOLDER/update.log
  echo "Successful update  `date +"%Y-%m-%d--%H:%M"`" 
  nearup stop
  sleep 2
  nearup run ${network} --binary-path ~/nearcore/target/release/
 else
  echo "Update is failed `date +"%Y-%m-%d--%H:%M"`" >> $HOMEFOLDER/update.log
 fi
}
  
#####################################################################################################

 if [[ "$USER" == "root" ]]; then
  HOMEFOLDER="/root"
  s2=$HOMEFOLDER
 else
  HOMEFOLDER="/home/$USER"
  s2="/home/"$USER
 fi
 
 . $HOME/.profile                          # to make near CLI working in SystemD
                                           # to works in SYSTED for make release needs PATH="/home/marat/.cargo/bin:$PATH"
  str=$(cat $HOME/.cargo/env)              # get  export PATH="$HOME/.cargo/bin:$PATH"
  #echo "str=  $str"
  ind1=$((`expr index "$str" "PATH"`-1))     #Index PATH
  ind2=$((`expr index "$str" "/"`-1))        #Index first /
  path=${str:$ind1:6}$s2${str:$ind2}       # get  PATH="/home/marat/.cargo/bin:$PATH"
  echo "path=  $path"  
  eval $path 

my_node=$(curl -s http://127.0.0.1:3030/status | jq .version | awk '{print $2}')   #My node version
   ###my_node="1.16.0-beta.1"
case ${my_node%,*} in         #choose my network
  
  *"$rc"*)
   # echo -n "TESTNET"
    network="testnet"
    ;;
  
  *"$beta"*)
  #  echo -n "BETANET"
    network="betanet"
    ;;  
  
  *)
    network="main"            #???????                
    ;;
esac

GH_version=$(curl -s https://rpc.${network}.near.org/status | jq .version | awk '{print $2}')  #Last version on GH
echo "Current Node version is ${my_node%,*}"
echo "Last version on GH is ${GH_version%,*}" 

if [[ ${my_node%,*} == ${GH_version%,*} ]]
 then
  echo "Version of the current Node is the last"
  echo "Version of the current Node is the last `date +"%Y-%m-%d--%H:%M"`" >> $HOMEFOLDER/update.log
 else
   echo "Needs update the current Node"
   echo "Needs update the current Node `date +"%Y-%m-%d--%H:%M"`" >> $HOMEFOLDER/update.log
   if [ -z "$GH_version" ]; then
    echo "Could't find the current Node version, may be not run, update continue"
   fi 
   GH_version=$(echo ${GH_version%,*} | awk -F "\"" '{print $2}')
   
   update
fi 

